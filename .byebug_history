continue
note
next
@note
next
note_params
@note
next
 params
continue
FFaker::Lorem.paragraphs(5)[0]
FFaker::Lorem.paragraphs(5)[0[
FFaker::Lorem.paragraphs(5)
params
note_params
next
continue
stock.quotes.adjusted_close
stock.quotes
continue
exit
quotes.select{|q|q.trade_date == '2015-06-19'}
quotes.max_by(&:adjusted_close)
quotes
quotes.max_by(&:adjusted_close)
quotes = yahoo.historical_quotes('SWKS', {start_date: Date.today - 1.years, end_date: Date.today, period: :daily})
yahoo ||= YahooFinance::Client.new
stock.quotes
a.adjusted_close.to_f
a.adjusted_close
a = a[0]
a.adjusted_close
b = stock.quotes.max_by(&:adjusted_close)
a = stock.quotes.select{|q|q.trade_date == '2015-06-19'}
stock.quotes.max_by(&:adjusted_close)
stock.quotes.select{|q|q.trade_date == '2015-06-19'}
exit
continue
stock.quotes
stock.quotes.select{|q|q.trade_date == '2015-06-19'}
stock.quotes.select{|q|q.trade_date = '2015-06-19'}
stock.quotes.select{|q|q.trade_date = '2015-06-19'
stock.quotes.max_by(&:adjusted_close)
stock.quotes.max_by(&:high)
stock.quotes.max_by(&:close)
stock.quotes.max_by(&:adjusted_close)
stock.quotes
continue
params
continue
params
earning
continue
earning
continue
params
continue
earning
continue
params
earning
exit
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[1]
value
key
key, value = earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[25].split(':')
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[26]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[25]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[24]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[23]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[22]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[21]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[20]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[19]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[18]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[17]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[16]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[15]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[14]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[13]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[12]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[11]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[10]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[9]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[8]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[7]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[6]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[5]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[4]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[3]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[2]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[1]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')[0]
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')
earning[2..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%')
earning[2..-2]
earning[2]
earning[1]
earning[0]
earning
earning[1..-2]
earning = data[0]
data[0]
data[0[
data = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').gsub(/\\/,'').split(',,,')
data
next
data
exit
params
continue
exit
e[0].split(':')[0].gsub(/\\/,'')
e[0].split(':')[0].gsub(/
e[0].split(':')[0].gsub(/\\/,)
e[0].split(':')[0].gsub(/\\/,}
e[0].split(':')
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{')
e[0].split(':')
e[0]
e = data1[1..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')
data1[1..-2].gsub(/,(\D)/, '%%%\1').gsub(/(\D),/, '\1%%%').split('%%%')
data1[1]
data1[0]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')
earning = data1[0]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[-1]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[3]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[2]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[1]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[0]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0][1]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0][0]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][1]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0][0]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[2]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[1]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)[0]
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/).gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')
data1 = parsed.search("script").text.scan(/"releases":"(.*)","allEstimates":"/)
data1 = parsed.search("script").text.scan(/"releases":"/)
data1 = parsed.search("script").text.scan(/"releases":"([.*])","allEstimates":"/)
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[8]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[-6]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[-5]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[-4]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[-3]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[-2]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[-1]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[1]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')[0]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][0]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0].gsub(/\"/,'').gsub(/},{/,'},,,{').split(',,,')
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0][2..-3]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[0]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)[1]
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*({.*})/)
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n\s*{/)
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n.*\)/)
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n.*)/)
data1 = parsed.search("script").text.scan(/DataModel\.parse\(\n/)
data[-13]
data[-14]
data[-10]
data[-6]
data[-5]
data[-4]
data[-3]
data[-2]
data[-1]
data[1]
data[0]
data = parsed.search("script")
data[2]
data[1]
data[0]
data = parsed.search("script").text
data = parsed.search("script").text.scan(/DataModel.parse\(.*\)/x)
data = parsed.search("script").text.scan(/DataModel\.parse\(\n\{/)
data = parsed.search("script").text.scan(/DataModel\.parse\(\n{/)
data = parsed.search("script").text.scan(/DataModel\.parse\(\n/)
data = parsed.search("script").text.scan(/DataModel\.parse\(/)
data = parsed.search("script").text.scan(/DataModel\.parse(/)
data = parsed.search("script").text.scan(/DataModel\.parse/)
data = parsed.search("script").text.scan(/DataModel\.parse.*:/)
data = parsed.search("script").text.scan(/DataModel.parse.*:/)
data = parsed.search("script").text.scan(/DataModel.parse\(.*:/)
data = parsed.search("script").text.scan(/DataModel.parse\(.*\)/)
data = parsed.search("script").text.scan(/DataModel.parse\(/)
data = parsed.search("script").text.scan(/DataModel.parse/)
data = parsed.search("script").text.scan(/DataModel.pars/)
data = parsed.search("script").text.scan(/parse\((.*)\)/)
data = parsed.search("script").text.scan(/DataModel/)
data = parsed.search("script").text.scan(/parse\((.*)\)/)
data = parsed.search("script").text.scan(/DataModel.parse\((.*)\)/)
data = parsed.search("script").text.scan(/DataModel\.parse\((.*)\)/)
data = parsed.search("script").text.scan(/ReleaseCollection\((.*)\)/)
data = parsed.search("script").text
parsed = Nokogiri::HTML(page.body)
page
